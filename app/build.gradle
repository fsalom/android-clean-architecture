plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id("de.mannodermaus.android-junit5") version "1.8.2.1"
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "es.rudo.androidbaseproject"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_BASE_URL", '"https://rickandmortyapi.com/"'
        }
        release {
            buildConfigField "String", "API_BASE_URL", '"https://rickandmortyapi.com/"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled = true
    }
    namespace 'es.rudo.androidbaseproject'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.1'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'com.google.firebase:firebase-firestore-ktx:24.2.2'

    //Testing
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")

    // (Optional) If you need "Parameterized Tests"
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")

    // (Optional) If you also have JUnit 4-based tests
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation "io.mockk:mockk:1.12.4"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.test:core-ktx:1.5.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.5"
    testImplementation "androidx.test:rules:1.5.0"
    implementation "androidx.test:core:1.5.0"
    testImplementation "org.robolectric:robolectric:4.8.1"
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.google.code.gson:gson:2.9.0'

    //Hilt
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"

    //Images
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //Room
    implementation("androidx.room:room-runtime:2.4.3")
    kapt("androidx.room:room-compiler:2.4.3")
    implementation("androidx.room:room-ktx:2.4.3")
    implementation("androidx.room:room-paging:2.4.3")
}